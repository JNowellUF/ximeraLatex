\usepackage{verbatim}

\usepackage{fancyvrb}

\Preamble{xhtml}

% We don't want to translate font suggestions with ugly wrappers like
% <span class="cmti-10"> for italic text
\NoFonts

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Include the "jax"ed newcommands

% Remove commands that use @
\immediate\write18{sed -i "/@/d" \jobname.jax}
% Replace ##1 with #1 and so forth
\immediate\write18{sed -i "s/\string#\string#\string\\([0-9]\string\\)/\string#\string\\1/g" \jobname.jax}

\Configure{BVerbatimInput}{\Tg<div class="preamble">\Tg<script type="math/tex">}{\Tg</script>\Tg</div>}{}{}

% Instead of a nonbreaking space, use a standard space
\makeatletter
\def\FV@Space{\space}
\makeatother

% Include the mathjax newcommands in a math/tex script right at the beginning of the body
\Configure{BODY}{%
\HCode{<body>\Hnewline}%
\BVerbatimInput{\jobname.jax}%
}{%
\HCode{</body>\Hnewline}%
}

% Don't output xml version tag
\Configure{VERSION}{}
 
% Output HTML5 doctype instead of the default for HTML4
\Configure{DOCTYPE}{\HCode{<!doctype html>\Hnewline}}
 
% Custom page opening
\Configure{HTML}{\HCode{<html lang="en">\Hnewline}}{\HCode{\Hnewline</html>}}
%\Configure{HTML}{}{}

% Reset <head>, aka delete all default boilerplate; alternatively set up new content
\Configure{@HEAD}{\HCode{<meta charset="UTF-8" />\Hnewline}}
\Configure{@HEAD}{\HCode{<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/\string~gurari/TeX4ht/)" />\Hnewline}}

% Translate \textbf, \textit and \texttt directives into <b>, <em> and <code>
\Configure{textbf}{\ifvmode\ShowPar\fi\HCode{<strong>}}{\HCode{</strong>}}
\Configure{textit}{\ifvmode\ShowPar\fi\HCode{<em>}}{\HCode{</em>}}
\Configure{texttt}{\ifvmode\ShowPar\fi\HCode{<code>}}{\HCode{</code>}}
 
% Translate verbatim and lstlisting blocks into <pre> elements
\ConfigureEnv{verbatim}{\HCode{<pre>}}{\HCode{</pre>}}{}{}
\ConfigureEnv{lstlisting}{\HCode{<pre>}}{\HCode{</pre>}}{}{}

% Should I avoid setting `indent`/`noindent` classes on paragraphs?  I am not sure yet.
% \Configure{HtmlPar}
% {\EndP\Tg<p>}
% {\EndP\Tg<p>}
% {\HCode{</p>\Hnewline}}
% {\HCode{</p>\Hnewline}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Configure for mathjax

\Configure{VERSION}{}
\Configure{@HEAD}{\HCode{
<script type="text/x-mathjax-config">                                           
  MathJax.Hub.Config({
    TeX: {           
      Macros: {     
        \unexpanded{La : "\\Lambda",
        B: "\\beta", 
        twosilt: "\\textrm{2-silt}",}
      }        
    },        
    extensions: ["tex2jax.js"], 
    tex2jax: {       
        \unexpanded{
      inlineMath: [ ['\$','\$'], ["\\\\(","\\\\)"] ],
      displayMath: [ ['$$','$$'], ["\\[","\\]"] ],}
      processEscapes: true
    }                   
  });                  
</script>   
}}
\Configure{@HEAD}{\HCode{<script type="text/javascript"\Hnewline
src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"\Hnewline
></script>\Hnewline}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Now I just need to add a \newcommand command which outputs the appropriate newcommands to MathJax; then this should be "good enough" for our purposes.

\newtoks\eqtoks
\def\AltMath#1${\eqtoks{$#1$}%
   \HCode{\the\eqtoks}$}
\Configure{$}{}{}{\expandafter\AltMath}

\def\AltlMathI#1\){\eqtoks{$#1$}%
        \HCode{\the\eqtoks}\)}
\Configure{()}{\AltlMathI}{}

\def\AltlDisplay#1\]{\eqtoks{$$#1$$}%
        \HCode{\the\eqtoks}\]}
\Configure{[]}{\AltlDisplay}{}

\def\AltlDisplayI#1$${\eqtoks{$$#1$$}%
  \HCode{\the\eqtoks}$$}           
\Configure{$$}{}{}{\expandafter\AltlDisplayI}  

\begin{document} 
\newcommand\VerbMath[1]{%
\renewenvironment{#1}{%
\NoFonts%
\string\begin\{#1\}%
\verbatim}{\endverbatim\string\end\{#1\}\EndNoFonts}%
}

\makeatletter
\Configure{graphics*}
{svg}{
  {\Configure{Needs}{File: \Gin@base.svg}\Needs{}}
  \Picture[\csname a:GraphicsAlt\endcsname]{\csname Gin@base\endcsname.svg \csname a:Gin-dim\endcsname}%
}
\makeatother

% The abstract has been stored in \theabstract and should be emitted as a div
\ConfigureEnv{abstract}{}{}{}{}
\ConfigureEnv{abstract}{\ifvmode \IgnorePar\fi \EndP\HCode{<div class="abstract">}}{\theabstract\HCode{</div>}}{}{}

% Get rid of the title block
%\Configure{maketitle}{}{}

%\VerbMath{equation*}

\EndPreamble
